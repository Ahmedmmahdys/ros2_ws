<?xml version="1.0" ?>
<robot name="ur10e" xmlns:xacro="http://ros.org/wiki/xacro">
  
  <!-- PASS ARGUMENTS: -->
  <xacro:arg name="kinematics_params" default="$(find multi_robot_sim)/config/ur10e_calibration.yaml"/>
  <xacro:arg name="kinematics_params" default="$(find multi_robot_sim)/config/robot_1_joint_limits.yaml"/>

  <xacro:property name="kinematics_params" value="$(arg kinematics_params)"/>
  
  <xacro:include filename="$(find multi_robot_sim)/urdf/ur10e_common.xacro" />
  <xacro:ur10e_common kinematics_parameters_file="${kinematics_params}"/>
  
  <xacro:arg name="safety_limits" default="true"/>
  <xacro:property name="safety_limits" value="$(arg safety_limits)"/>
  <xacro:arg name="safety_pos_margin" default="0.15"/>
  <xacro:property name="safety_pos_margin" value="$(arg safety_pos_margin)"/>
  <xacro:arg name="safety_k_position" default="20"/>
  <xacro:property name="safety_k_position" value="$(arg safety_k_position)"/>


  <!-- Main agrs -->
  <xacro:arg name="tf_prefix" default=""/>
  <xacro:property name="tf_prefix" value="$(arg tf_prefix)"/>
  <xacro:arg name="robot_name" default="robot_1"/>
  <xacro:property name="robot_name" value="$(arg robot_name)"/>

  <!-- Useful XACRO Variables (Properties) -->
    <xacro:property name="PI_5" value="15.707963268" />
    <xacro:property name="PI" value="3.14159265359" />
    <xacro:property name="PI_2" value="1.570796327" />
    <xacro:property name="PI_18" value="0.174532925" />
    <xacro:property name="D_160" value="2.792526803" />
    <xacro:property name="D_200" value="3.490658504" />
    <xacro:property name="effort" value="30.0" />
    <xacro:property name="velocity" value="30.0" />

    <!-- Useful Macros -->
    <xacro:macro name="default_inertial" params="mass">
        <inertial>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <mass value="${mass}" />
            <inertia ixx="0.5" ixy="0.0" ixz="0.0"
                     iyy="0.5" iyz="0.0"
                     izz="0.5" />
        </inertial>
    </xacro:macro>

  <!-- World link -->
  <link name="world"/>

  <!-- START towercrane START towercrane-->
  <!-- START towercrane START towercrane-->
  <!-- START towercrane START towercrane-->

 <!-- Virtuall Joint -->  
    <joint name="virtual_joint" type="fixed">
        <parent link="world"/>
        <child link="ground_base_link"/>
        <origin xyz="0 0 0.78" rpy="0 0 3.14159265359"/>
    </joint> 
    <link name="ground_base_link">
        <xacro:default_inertial mass="1.0"/>
        <visual>
            <origin xyz="-0.8 -0.8 0" rpy="0 0 0" />
            <geometry>
                <mesh filename="file://$(find multi_robot_sim)/meshes/towercrane_ground_base.STL" scale="0.01 0.01 0.01"/>
            </geometry>
        </visual>
        <collision>
            <origin xyz="0 0 1.12" rpy="0 0 0"/>
            <geometry>
                <box size="4.8 4.8 3.5"/> 
                <!-- <mesh filename="file://$(find multi_robot_sim)/meshes/towercrane_ground_base.STL" scale="0.01 0.01 0.01"/> -->
            </geometry>
        </collision>
    </link>
    <gazebo reference="ground_base_link">
        <material>Gazebo/Red</material>   
    </gazebo>
 
    <joint name="body_segment_joint_01" type="fixed">
        <parent link="ground_base_link"/>
        <child link="body_segment_link_01"/>
        <origin xyz="0 0 3" rpy="0 0 0"/>
    </joint> 
    <link name="body_segment_link_01">
        <xacro:default_inertial mass="1.0"/>
        <visual>
            <origin xyz="-0.8 -0.8 0" rpy="0 0 0" />
            <geometry>
                <mesh filename="file://$(find multi_robot_sim)/meshes/towercrane_body_segment.STL" scale="0.01 0.01 0.01"/>
            </geometry>
        </visual>
        <collision>
            <origin xyz="0 0 1.4" rpy="0 0 0"/>
            <geometry>
                <box size="2 2 2.9"/> 
                <!-- <mesh filename="file://$(find multi_robot_sim)/meshes/towercrane_body_segment.STL" scale="0.01 0.01 0.01"/> -->
            </geometry>
        </collision>
    </link>
    <gazebo reference="body_segment_link_01">
        <material>Gazebo/Yellow</material>   
    </gazebo>

    <joint name="body_segment_joint_02" type="fixed">
        <parent link="body_segment_link_01"/>
        <child link="body_segment_link_02"/>
        <origin xyz="0 0 3" rpy="0 0 0"/>
    </joint> 
    <link name="body_segment_link_02">
        <xacro:default_inertial mass="1.0"/>
        <visual>
            <origin xyz="-0.8 -0.8 0" rpy="0 0 0" />
            <geometry>
                <mesh filename="file://$(find multi_robot_sim)/meshes/towercrane_body_segment.STL" scale="0.01 0.01 0.01"/>
            </geometry>
        </visual>
        <collision>
            <origin xyz="0 0 1.4" rpy="0 0 0"/>
            <geometry>
                <box size="2 2 2.9"/> 
                <!-- <mesh filename="file://$(find multi_robot_sim)/meshes/towercrane_body_segment.STL" scale="0.01 0.01 0.01"/> -->
            </geometry>
        </collision>
    </link>
    <gazebo reference="body_segment_link_02">
        <material>Gazebo/Yellow</material>   
    </gazebo>


    <joint name="body_segment_joint_03" type="fixed">
        <parent link="body_segment_link_02"/>
        <child link="body_segment_link_03"/>
        <origin xyz="0 0 3" rpy="0 0 0"/>
    </joint> 
    <link name="body_segment_link_03">
        <xacro:default_inertial mass="1.0"/>
        <visual>
            <origin xyz="-0.8 -0.8 0" rpy="0 0 0" />
            <geometry>
                <mesh filename="file://$(find multi_robot_sim)/meshes/towercrane_body_segment.STL" scale="0.01 0.01 0.01"/>
            </geometry>
        </visual>
        <collision>
            <origin xyz="0 0 1.4" rpy="0 0 0"/>
            <geometry>
                <box size="2 2 2.9"/> 
                <!-- <mesh filename="file://$(find multi_robot_sim)/meshes/towercrane_body_segment.STL" scale="0.01 0.01 0.01"/> -->
            </geometry>
        </collision>
    </link>
    <gazebo reference="body_segment_link_03">
        <material>Gazebo/Yellow</material>   
    </gazebo>

    <joint name="body_segment_joint_04" type="fixed">
        <parent link="body_segment_link_03"/>
        <child link="body_segment_link_04"/>
        <origin xyz="0 0 3" rpy="0 0 0"/>
    </joint> 
    <link name="body_segment_link_04">
        <xacro:default_inertial mass="1.0"/>
        <visual>
            <origin xyz="-0.8 -0.8 0" rpy="0 0 0" />
            <geometry>
                <mesh filename="file://$(find multi_robot_sim)/meshes/towercrane_body_segment.STL" scale="0.01 0.01 0.01"/>
            </geometry>
        </visual>
        <collision>
            <origin xyz="0 0 1.4" rpy="0 0 0"/>
            <geometry>
                <box size="2 2 2.9"/> 
                <!-- <mesh filename="file://$(find multi_robot_sim)/meshes/towercrane_body_segment.STL" scale="0.01 0.01 0.01"/> -->
            </geometry>
        </collision>
    </link>
    <gazebo reference="body_segment_link_04">
        <material>Gazebo/Yellow</material>   
    </gazebo>

    <joint name="body_segment_joint_05" type="fixed">
        <parent link="body_segment_link_04"/>
        <child link="body_segment_link_05"/>
        <origin xyz="0 0 3" rpy="0 0 0"/>
    </joint> 
    <link name="body_segment_link_05">
        <xacro:default_inertial mass="1.0"/>
        <visual>
            <origin xyz="-0.8 -0.8 0" rpy="0 0 0" />
            <geometry>
                <mesh filename="file://$(find multi_robot_sim)/meshes/towercrane_body_segment.STL" scale="0.01 0.01 0.01"/>
            </geometry>
        </visual>
        <collision>
            <origin xyz="0 0 1.4" rpy="0 0 0"/>
            <geometry>
                <box size="2 2 2.9"/> 
                <!-- <mesh filename="file://$(find multi_robot_sim)/meshes/towercrane_body_segment.STL" scale="0.01 0.01 0.01"/> -->
            </geometry>
        </collision>
    </link>
    <gazebo reference="body_segment_link_05">
        <material>Gazebo/Yellow</material>   
    </gazebo>

    <joint name="body_segment_joint_06" type="fixed">
        <parent link="body_segment_link_05"/>
        <child link="body_segment_link_06"/>
        <origin xyz="0 0 3" rpy="0 0 0"/>
    </joint> 
    <link name="body_segment_link_06">
        <xacro:default_inertial mass="1.0"/>
        <visual>
            <origin xyz="-0.8 -0.8 0" rpy="0 0 0" />
            <geometry>
                <mesh filename="file://$(find multi_robot_sim)/meshes/towercrane_body_segment.STL" scale="0.01 0.01 0.01"/>
            </geometry>
        </visual>
        <collision>
            <origin xyz="0 0 1.4" rpy="0 0 0"/>
            <geometry>
                <box size="2 2 2.9"/> 
                <!-- <mesh filename="file://$(find multi_robot_sim)/meshes/towercrane_body_segment.STL" scale="0.01 0.01 0.01"/> -->
            </geometry>
        </collision>
    </link>
    <gazebo reference="body_segment_link_06">
        <material>Gazebo/Yellow</material>   
    </gazebo>

    <joint name="body_segment_joint_07" type="fixed">
        <parent link="body_segment_link_06"/>
        <child link="body_segment_link_07"/>
        <origin xyz="0 0 3" rpy="0 0 0"/>
    </joint> 
    <link name="body_segment_link_07">
        <xacro:default_inertial mass="1.0"/>
        <visual>
            <origin xyz="-0.8 -0.8 0" rpy="0 0 0" />
            <geometry>
                <mesh filename="file://$(find multi_robot_sim)/meshes/towercrane_body_segment.STL" scale="0.01 0.01 0.01"/>
            </geometry>
        </visual>
        <!-- <collision>
            <origin xyz="0 0 1.4" rpy="0 0 0"/>
            <geometry>
                <box size="2 2 2.9"/> 
                <mesh filename="file://$(find multi_robot_sim)/meshes/towercrane_body_segment.STL" scale="0.01 0.01 0.01"/>
            </geometry>
        </collision> -->
    </link>
    <gazebo reference="body_segment_link_07">
        <material>Gazebo/Yellow</material>   
    </gazebo>

    <joint name="body_segment_joint_08" type="fixed">
        <parent link="body_segment_link_07"/>
        <child link="body_segment_link_08"/>
        <origin xyz="0 0 3" rpy="0 0 0"/>
    </joint> 
    <link name="body_segment_link_08">
        <xacro:default_inertial mass="1.0"/>
        <visual>
            <origin xyz="-0.8 -0.8 0" rpy="0 0 0" />
            <geometry>
                <mesh filename="file://$(find multi_robot_sim)/meshes/towercrane_body_segment.STL" scale="0.01 0.01 0.01"/>
            </geometry>
        </visual>
        <!-- <collision>
            <origin xyz="0 0 1.4" rpy="0 0 0"/>
            <geometry>
                <box size="2 2 2.9"/> 
                <mesh filename="file://$(find multi_robot_sim)/meshes/towercrane_body_segment.STL" scale="0.01 0.01 0.01"/>
            </geometry>
        </collision> -->
    </link>
    <gazebo reference="body_segment_link_08">
        <material>Gazebo/Yellow</material>   
    </gazebo>

    <joint name="body_climbing_segment_joint_09" type="fixed">
        <parent link="body_segment_link_08"/>
        <child link="body_climbing_segment_link_09"/>
        <origin xyz="0 0 3" rpy="0 0 0"/> 

    </joint> 
    <link name="body_climbing_segment_link_09">
        <xacro:default_inertial mass="1.0"/>
        <visual>
            <origin xyz="-1.9643 -1.8635 -24" rpy="0 0 0" />
            <geometry>
                <mesh filename="file://$(find multi_robot_sim)/meshes/tower_crane_climbing_segment.STL" scale="0.001 0.001 0.001"/>
            </geometry>
        </visual>
        <collision>
            <origin xyz="0 0 -2.5" rpy="0 0 0"/>
            <geometry>
                <box size="5 5 6.5"/> 
                <!-- <mesh filename="file://$(find multi_robot_sim)/meshes/tower_crane_climbing_segment.STL" scale="0.001 0.001 0.001"/> -->
            </geometry>
        </collision> 
    </link> 
    <gazebo reference="body_climbing_segment_link_09">
        <material>Gazebo/Yellow</material>   
    </gazebo>

    <joint name="joint_1" type="revolute">
        <parent link="body_climbing_segment_link_09"/>
        <child link="cabin_segment_link_10"/>
        <axis xyz="0 0 1"/>
        <origin xyz="0 0 1.7" rpy="0 0 0"/>
        <limit lower="-${D_160}" upper="${D_200}" 
        effort="${effort}" velocity="${velocity}"/>
    </joint> 
    <link name="cabin_segment_link_10">
        <xacro:default_inertial mass="1.0"/>
        <visual>
            <origin xyz="-0.8 -0.8 -6.5" rpy="0 0 0" />
            <geometry>
                <mesh filename="file://$(find multi_robot_sim)/meshes/crane_cabin_segment.STL" scale="0.01 0.01 0.01"/>
            </geometry>
        </visual>
        <!-- <collision>
            <origin xyz="0 0 1.4" rpy="0 0 0"/>
            <geometry>
                <box size="2 2 2.9"/> 
                <mesh filename="file://$(find multi_robot_sim)/meshes/crane_cabin_segment.STL" scale="0.01 0.01 0.01"/>
            </geometry>
        </collision> -->
    </link>
    <gazebo reference="cabin_segment_link_10">
        <material>Gazebo/Red</material>   
    </gazebo> 

    <joint name="apex_joint_11" type="fixed">
        <parent link="cabin_segment_link_10"/>
        <child link="apex_link_11"/>
        <origin xyz="0 0 3" rpy="0 0 0"/>
    </joint> 
    <link name="apex_link_11">
        <xacro:default_inertial mass="1.0"/>
        <visual>
            <origin xyz="-0.8 -0.8 -9.3" rpy="0 0 0" />
            <geometry>
                <mesh filename="file://$(find multi_robot_sim)/meshes/apex.STL" scale="0.01 0.01 0.01"/>
            </geometry>
        </visual>
        <collision>
            <origin xyz="0 0 3.5" rpy="0 0 0"/>
            <geometry>
                <box size="2 2 7.0"/>
                <!-- <mesh filename="file://$(find multi_robot_sim)/meshes/apex.STL" scale="0.01 0.01 0.01"/> -->
            </geometry>
        </collision> 
    </link> 
    <gazebo reference="apex_link_11">
        <material>Gazebo/Yellow</material>   
    </gazebo>

    <joint name="weight_segment_joint_12" type="fixed">
        <parent link="cabin_segment_link_10"/>
        <child link="weight_segment_link_12"/>
        <origin xyz="0 0 2.7" rpy="0 0 0"/>
    </joint> 
    <link name="weight_segment_link_12">
        <xacro:default_inertial mass="1.0"/>
        <visual>
            <origin xyz="-0.8 -1.325 -33" rpy="0 0 0" />
            <geometry>
                <mesh filename="file://$(find multi_robot_sim)/meshes/weight_segment.STL" scale="0.001 0.001 0.001"/>
            </geometry>
        </visual>
        <collision>
            <origin xyz="9 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="15 2 2.9"/>
                <!-- <mesh filename="file://$(find multi_robot_sim)/meshes/weight_segment.STL" scale="0.001 0.001 0.001"/> -->
            </geometry>
        </collision> 
    </link>
    <gazebo reference="weight_segment_link_12">
        <material>Gazebo/Yellow</material>   
    </gazebo>

    <joint name="crane_jib_base_joint_13" type="fixed">
        <parent link="cabin_segment_link_10"/>
        <child link="crane_jib_base_link_13"/>
        <origin xyz="0 0 2.7" rpy="0 0 ${PI }"/>
    </joint> 
    <link name="crane_jib_base_link_13">
        <xacro:default_inertial mass="1.0"/>
        <visual>
            <origin xyz="-0.8 -0.825 -33" rpy="0 0 0" />
            <geometry>
                <mesh filename="file://$(find multi_robot_sim)/meshes/crane_jib_base.STL" scale="0.001 0.001 0.001"/>
            </geometry>
        </visual>
        <collision>
            <origin xyz="20 0 0.6" rpy="0 0 0"/>
            <geometry>
                <box size="37 1.6 1.5"/>
                <!-- <mesh filename="file://$(find multi_robot_sim)/meshes/crane_jib_base.STL" scale="0.001 0.001 0.001"/> -->
            </geometry>
        </collision> 
    </link>  
    <gazebo reference="crane_jib_base_link_13">
        <material>Gazebo/Yellow</material>   
    </gazebo>

    <joint name="crane_jib_main_joint_14" type="fixed">
        <parent link="crane_jib_base_link_13"/>
        <child link="crane_jib_main_link_14"/>
        <origin xyz="0 0 0" rpy="0 0 0"/>
    </joint> 
    <link name="crane_jib_main_link_14">
        <xacro:default_inertial mass="1.0"/>
        <visual>
            <origin xyz="6.515 -0.8 -33" rpy="0 0 0" />
            <geometry>
                <mesh filename="file://$(find multi_robot_sim)/meshes/crane_jib_main.STL" scale="0.001 0.001 0.001"/>
            </geometry>
        </visual>
        <!-- <collision>
            <origin xyz="6.515 -0.8 -33" rpy="0 0 0"/>
            <geometry>
                <mesh filename="file://$(find multi_robot_sim)/meshes/crane_jib_main.STL" scale="0.001 0.001 0.001"/>
            </geometry>
        </collision>  -->
    </link>
    <gazebo reference="crane_jib_main_link_14">
        <material>Gazebo/Yellow</material>   
    </gazebo>

    <joint name="crane_jib_main_joint_15" type="fixed">
        <parent link="crane_jib_main_link_14"/>
        <child link="crane_jib_main_link_15"/>
        <origin xyz="0 0 0" rpy="0 0 0"/>
    </joint> 
    <link name="crane_jib_main_link_15">
        <xacro:default_inertial mass="1.0"/>
        <visual>
            <origin xyz="13.83 -0.8 -33" rpy="0 0 0" />
            <geometry>
                <mesh filename="file://$(find multi_robot_sim)/meshes/crane_jib_main.STL" scale="0.001 0.001 0.001"/>
            </geometry>
        </visual>
        <!-- <collision>
            <origin xyz="13.83 -0.8 -33" rpy="0 0 0"/>
            <geometry>
                <mesh filename="file://$(find multi_robot_sim)/meshes/crane_jib_main.STL" scale="0.001 0.001 0.001"/>
            </geometry>
        </collision> -->
    </link> 
    <gazebo reference="crane_jib_main_link_15">
        <material>Gazebo/Yellow</material>   
    </gazebo>

    <joint name="crane_jib_main_joint_16" type="fixed">
        <parent link="crane_jib_main_link_15"/>
        <child link="crane_jib_main_link_16"/>
        <origin xyz="0 0 0" rpy="0 0 0"/>
    </joint> 
    <link name="crane_jib_main_link_16">
        <xacro:default_inertial mass="1.0"/>
        <visual>
            <origin xyz="21.145 -0.8 -33" rpy="0 0 0" />
            <geometry>
                <mesh filename="file://$(find multi_robot_sim)/meshes/crane_jib_main.STL" scale="0.001 0.001 0.001"/>
            </geometry>
        </visual>
        <!-- <collision>
            <origin xyz="20 0 0.6" rpy="0 0 0"/>
            <geometry>
                <box size="37 1.6 1.5"/>
                <mesh filename="file://$(find multi_robot_sim)/meshes/crane_jib_main.STL" scale="0.001 0.001 0.001"/>
            </geometry>
        </collision>  -->
    </link> 
    <gazebo reference="crane_jib_main_link_16">
        <material>Gazebo/Yellow</material>   
    </gazebo>

    <joint name="crane_jib_last_joint_17" type="fixed">
        <parent link="crane_jib_main_link_16"/>
        <child link="crane_jib_last_link_17"/>
        <origin xyz="0 0 0" rpy="0 0 0"/>
    </joint> 
    <link name="crane_jib_last_link_17">
        <xacro:default_inertial mass="1.0"/>
        <visual>
            <origin xyz="28.46 -0.825 -33" rpy="0 0 0" />
            <geometry>
                <mesh filename="file://$(find multi_robot_sim)/meshes/crane_jib_last.STL" scale="0.001 0.001 0.001"/>
            </geometry>
        </visual>
        <!-- <collision>
            <origin xyz="28.46 -0.825 -33" rpy="0 0 0"/>
            <geometry>
                <mesh filename="file://$(find multi_robot_sim)/meshes/crane_jib_last.STL" scale="0.001 0.001 0.001"/>
            </geometry>
        </collision> -->
    </link> 
    <gazebo reference="crane_jib_last_link_17">
        <material>Gazebo/Yellow</material>   
    </gazebo>

    <joint name="joint_2" type="prismatic">
        <parent link="crane_jib_base_link_13"/>
        <child link="trolley_link_18"/>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <limit lower= "6"  upper="36" 
        effort="${effort}" velocity="${velocity}"/>
    </joint> 
    <link name="trolley_link_18">
        <xacro:default_inertial mass="1.0"/>
        <visual>
            <origin xyz="-2.275 -1.405 -33" rpy="0 0 0" />
            <geometry>
                <mesh filename="file://$(find multi_robot_sim)/meshes/trolley_base.STL" scale="0.001 0.001 0.001"/>
            </geometry>
        </visual>
        <!-- <collision>
            <origin xyz="-2.275 -1.405 -33" rpy="0 0 0"/>
            <geometry>
                <mesh filename="file://$(find multi_robot_sim)/meshes/trolley_base.STL" scale="0.001 0.001 0.001"/>
            </geometry>
        </collision> -->
    </link>
    <gazebo reference="trolley_link_18">
        <material>Gazebo/Red</material>   
    </gazebo>
    
    <!-- <joint name="joint_2" type="prismatic">
        <parent link="trolley_link_18"/>
        <child link="cable_link_19"/>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <axis xyz="0 0 -1"/>
        <limit lower= "0"  upper="22" 
        effort="${effort}" velocity="${velocity}"/>
    </joint> 
    <link name="cable_link_19">
        <xacro:default_inertial mass="1.0"/>
        <visual>
            <origin xyz="-2 -0.8 -33" rpy="0 0 0" />
            <geometry>
                <mesh filename="file://$(find multi_robot_sim)/meshes/cable_01.STL" scale="0.001 0.001 0.001"/>
            </geometry>
        </visual>
        <collision>
            <origin xyz="-2 -0.8 -33" rpy="0 0 0"/>
            <geometry>
                <mesh filename="file://$(find multi_robot_sim)/meshes/cable_01.STL" scale="0.001 0.001 0.001"/>
            </geometry>
        </collision>
    </link>  -->


    <joint name="joint_an_1" type="fixed">
        <parent link="trolley_link_18"/>
        <child link="swing_link_19"/>
        <origin xyz="0 0 -0.54" rpy="${PI_2} 0 0"/>
    </joint> 
    <link name="swing_link_19">
        <xacro:default_inertial mass="1.0"/>
        <visual>
            <origin xyz="-0.09 -0.25 -0.05" rpy="0 0 0" />
            <geometry>
                <mesh filename="file://$(find multi_robot_sim)/meshes/swing.STL" scale="0.001 0.001 0.001"/>
            </geometry>
        </visual>
        <!-- <collision>
            <origin xyz="-0.09 -0.25 -0.05" rpy="0 0 0"/>
            <geometry>
                <mesh filename="file://$(find multi_robot_sim)/meshes/swing.STL" scale="0.001 0.001 0.001"/>
            </geometry>
        </collision>  -->
    </link> 
    <gazebo reference="swing_link_19">
        <material>Gazebo/Green</material>   
    </gazebo>

    <!-- <joint name="joint_an_1" type="revolute">
        <parent link="trolley_link_18"/>
        <child link="hooker_link_19"/>
        <origin xyz="0 0 -0.54" rpy="${PI_2} 0 0"/>
        <axis xyz="0 0 1"/>
        <limit lower="-${PI_18}" upper="${PI_18}" 
        effort="${effort}" velocity="${velocity}"/>
    </joint>  -->


    <joint name="joint_an_2" type="fixed">
        <parent link="swing_link_19"/>
        <child link="rod_01_link_20"/>
        <origin xyz="0 -0.2 0" rpy="${PI_2} 0 0"/>
    </joint> 
    <link name="rod_01_link_20">
        <xacro:default_inertial mass="1.0"/>
        <visual>
            <origin xyz="-0.05 -0.05 -0.05" rpy="0 0 0" />
            <geometry>
                <mesh filename="file://$(find multi_robot_sim)/meshes/rod_01.STL" scale="0.001 0.001 0.001"/>
            </geometry>
        </visual>
        <collision>
            <origin xyz="0 0 2.5" rpy="0 0 0"/>
            <geometry>
                <cylinder radius="0.1" length="4.8"/>
                <!-- <mesh filename="file://$(find multi_robot_sim)/meshes/rod_01.STL" scale="0.001 0.001 0.001"/> -->
            </geometry>
        </collision> 
    </link>
    <gazebo reference="rod_01_link_20">
        <material>Gazebo/Grey</material>   
    </gazebo>

    <!-- <joint name="joint_an_2" type="revolute">
        <parent link="hooker_link_19"/>
        <child link="rod_01_link_20"/>
        <origin xyz="0 -0.2 0" rpy="${PI_2} 0 0"/>
        <axis xyz="1 0 0"/>
        <limit lower="-${PI_18}" upper="${PI_18}" 
        effort="${effort}" velocity="${velocity}"/>
    </joint>  -->

    
    <joint name="joint_3" type="prismatic">
        <parent link="rod_01_link_20"/>
        <child link="rod_02_link_21"/>
        <origin xyz="0 0 5" rpy="0 0 0"/>
        <axis xyz="0 0 -1"/>
        <limit lower="0" upper="5" 
        effort="${effort}" velocity="${velocity}"/>
    </joint> 
    <link name="rod_02_link_21">
        <xacro:default_inertial mass="1.0"/>
        <visual>
            <origin xyz="-0.05 -0.05 -0.05" rpy="0 0 0" />
            <geometry>
                <mesh filename="file://$(find multi_robot_sim)/meshes/rod_02.STL" scale="0.001 0.001 0.001"/>
            </geometry>
        </visual>
        <collision>
            <origin xyz="0 0 2.5" rpy="0 0 0"/>
            <geometry>
                <cylinder radius="0.1" length="4.8"/>
                <!-- <mesh filename="file://$(find multi_robot_sim)/meshes/rod_02.STL" scale="0.001 0.001 0.001"/> -->
            </geometry>
        </collision> 
    </link>
    <gazebo reference="rod_02_link_21">
        <material>Gazebo/Grey</material>   
    </gazebo>

    <joint name="joint_4" type="prismatic">
        <parent link="rod_02_link_21"/>
        <child link="rod_03_link_22"/>
        <origin xyz="0 0 5" rpy="0 0 0"/>
        <axis xyz="0 0 -1"/>
        <limit lower="0" upper="5" 
        effort="${effort}" velocity="${velocity}"/>
    </joint> 
    <link name="rod_03_link_22">
        <xacro:default_inertial mass="1.0"/>
        <visual>
            <origin xyz="-0.05 -0.05 -0.05" rpy="0 0 0" />
            <geometry>
                <mesh filename="file://$(find multi_robot_sim)/meshes/rod_02.STL" scale="0.001 0.001 0.001"/>
            </geometry>
        </visual>
        <collision>
            <origin xyz="0 0 2.5" rpy="0 0 0"/>
            <geometry>
                <cylinder radius="0.1" length="4.8"/>
                <!-- <mesh filename="file://$(find multi_robot_sim)/meshes/rod_02.STL" scale="0.001 0.001 0.001"/> -->
            </geometry>
        </collision> 
    </link>
    <gazebo reference="rod_03_link_22">
        <material>Gazebo/Grey</material>   
    </gazebo>

    <joint name="joint_5" type="prismatic">
        <parent link="rod_03_link_22"/>
        <child link="rod_04_link_23"/>
        <origin xyz="0 0 5" rpy="0 0 0"/>
        <axis xyz="0 0 -1"/>
        <limit lower="0" upper="5" 
        effort="${effort}" velocity="${velocity}"/>
    </joint> 
    <link name="rod_04_link_23">
        <xacro:default_inertial mass="1.0"/>
        <visual>
            <origin xyz="-0.05 -0.05 -0.05" rpy="0 0 0" />
            <geometry>
                <mesh filename="file://$(find multi_robot_sim)/meshes/rod_02.STL" scale="0.001 0.001 0.001"/>
            </geometry>
        </visual>
        <collision>
            <origin xyz="0 0 2.5" rpy="0 0 0"/>
            <geometry>
                <cylinder radius="0.1" length="4.8"/>
                <!-- <mesh filename="file://$(find multi_robot_sim)/meshes/rod_02.STL" scale="0.001 0.001 0.001"/> -->
            </geometry>
        </collision> 
    </link>
    <gazebo reference="rod_04_link_23">
        <material>Gazebo/Grey</material>   
    </gazebo>

    <joint name="joint_6" type="prismatic">
        <parent link="rod_04_link_23"/>
        <child link="rod_05_link_24"/>
        <origin xyz="0 0 5" rpy="0 0 0"/>
        <axis xyz="0 0 -1"/>
        <limit lower="0" upper="5" 
        effort="${effort}" velocity="${velocity}"/>
    </joint> 
    <link name="rod_05_link_24">
        <xacro:default_inertial mass="1.0"/>
        <visual>
            <origin xyz="-0.05 -0.05 -0.05" rpy="0 0 0" />
            <geometry>
                <mesh filename="file://$(find multi_robot_sim)/meshes/rod_02.STL" scale="0.001 0.001 0.001"/>
            </geometry>
        </visual>
        <collision>
            <origin xyz="0 0 2.5" rpy="0 0 0"/>
            <geometry>
                <cylinder radius="0.1" length="4.8"/>
                <!-- <mesh filename="file://$(find multi_robot_sim)/meshes/rod_02.STL" scale="0.001 0.001 0.001"/> -->
            </geometry>
        </collision> 
    </link>
    <gazebo reference="rod_05_link_24">
        <material>Gazebo/Grey</material>   
    </gazebo>

    <joint name="joint_7" type="prismatic">
        <parent link="rod_05_link_24"/>
        <child link="rod_06_link_25"/>
        <origin xyz="0 0 5" rpy="0 0 0"/>
        <axis xyz="0 0 -1"/>
        <limit lower="0" upper="5" 
        effort="${effort}" velocity="${velocity}"/>
    </joint> 
    <link name="rod_06_link_25">
        <xacro:default_inertial mass="1.0"/>
        <visual>
            <origin xyz="-0.05 -0.05 -0.05" rpy="0 0 0" />
            <geometry>
                <mesh filename="file://$(find multi_robot_sim)/meshes/rod_02.STL" scale="0.001 0.001 0.001"/>
            </geometry>
        </visual>
        <collision>
            <origin xyz="0 0 2.5" rpy="0 0 0"/>
            <geometry>
                <cylinder radius="0.1" length="4.8"/>
                <!-- <mesh filename="file://$(find multi_robot_sim)/meshes/rod_02.STL" scale="0.001 0.001 0.001"/> -->
            </geometry>
        </collision> 
    </link>
    <gazebo reference="rod_06_link_25">
        <material>Gazebo/Grey</material>   
    </gazebo>

    <joint name="joint_8" type="revolute">
        <parent link="rod_06_link_25"/>
        <child link="hook_link_26"/>
        <origin xyz="0 0 5" rpy="0 0 0"/>
        <axis xyz="0 0 -1"/>
        <limit lower="-${PI}" upper="${PI}" 
        effort="${effort}" velocity="${velocity}"/>
    </joint> 
    <link name="hook_link_26">
        <xacro:default_inertial mass="1.0"/>
        <visual>
            <origin xyz="-2.275 0.798 25.0" rpy="${PI} 0 0" />
            <geometry>
                <mesh filename="file://$(find multi_robot_sim)/meshes/hook_final.STL" scale="0.001 0.001 0.001"/>
            </geometry>
        </visual>
        <!-- <collision>
            <origin xyz="0 0 2.5" rpy="0 0 0"/>
            <geometry>
                <cylinder radius="0.1" length="4.8"/>
                <mesh filename="file://$(find multi_robot_sim)/meshes/hook_final.STL" scale="0.001 0.001 0.001"/>
            </geometry>
        </collision>  -->
    </link>
    <gazebo reference="hook_link_26">
        <material>Gazebo/Red</material>   
    </gazebo>



  <!-- END towercrane END towercrane END towercrane-->
  <!-- END towercrane END towercrane END towercrane-->
  <!-- END towercrane END towercrane END towercrane-->



  <!-- Basic env Basic env Basic env-->
  <!-- Basic env Basic env Basic env--> 
  <xacro:if value="${robot_name == 'robot_1'}">
    
    <link name='table'>
      <inertial>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <mass value="100"/>
        <inertia ixx="18.73714"  ixy="0"  ixz="0" iyy="18.73714" iyz="0" izz="18.73714" />
      </inertial>
      <collision name='collision'>
        <origin xyz="-0.9 -0.5 -0.35" rpy=" 0 0 0"/> 
        <geometry>
          <box size = "1.8 1.0 0.7"/>
        </geometry>
        <surface>
          <contact>
            <collide_without_contact>false</collide_without_contact>
            <ode>
              <kp>1000000</kp> <!-- Adjusted stiffness for stability -->
              <kd>100</kd> <!-- Damping to reduce jitter -->
              <min_depth>0.001</min_depth>
              <max_vel>0.01</max_vel>
            </ode>
          </contact>
          <friction>
            <ode>
              <mu>0.7</mu>
              <mu2>0.7</mu2>
            </ode>
          </friction>
        </surface>
      </collision>
      <visual name='chassis_visual'>
        <origin xyz="-0.9 -0.5 -0.35" rpy=" 0 0 0"/>
        <geometry>
          <box size = "1.8 1.0 0.7"/>
        </geometry>
        <material name="black">
          <color rgba="1 0 0 1"/>
        </material>
      </visual>
    </link>
    <gazebo reference="table">
      <kp>1000000</kp> <!-- Adjusted stiffness for stability -->
      <kd>100</kd> <!-- Damping to reduce jitter -->
      <material>Gazebo/Blue</material>
      <mu1>0.7</mu1>
      <mu2>0.7</mu2>
      <selfCollide>false</selfCollide>
      <ode>
        <solver>
          <type>quick</type> <!-- Consistent with world solver settings -->
          <iters>200</iters> <!-- Increased iterations to align with world solver -->
          <sor>1.3</sor>
        </solver>
        <constraints>
          <cfm>0.001</cfm>
          <erp>0.65</erp>
        </constraints>
      </ode>
    </gazebo>

    <joint name="table_world" type="fixed">
      <parent link="world" />
      <child link = "table" />
      <origin xyz="-0.8 12.8 0.8" rpy="0.0 0.0 0.0" />
    </joint>
    
    <joint name="block-base" type="fixed">
      <parent link="table" />
      <child link = "${tf_prefix}base_link" />
      <origin xyz="-0.15 -0.15 0.01" rpy="0.0 0.0 0.0" /> 
    </joint>

    <!-- <joint name="small_table_front_joint" type="fixed">
      <parent link="world" />
      <child link = "small_table_front" />
      <origin xyz="-5 -4.4 0.305" rpy="0.0 0.0 0.0" /> 
    </joint>

    <link name='small_table_front'>
      <inertial>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <mass value="100"/>
        <inertia ixx="18.73714"  ixy="0"  ixz="0" iyy="18.73714" iyz="0" izz="18.73714" />
      </inertial>
      <collision>
        <origin xyz="0 0 0" rpy=" 0 0 0"/> 
        <geometry>
          <box size = "0.7 0.7 0.6"/>
        </geometry>
        <surface>
          <contact>
            <collide_without_contact>false</collide_without_contact>
            <ode>
              <kp>1000000</kp>
              <kd>100</kd> 
              <min_depth>0.001</min_depth>
              <max_vel>0.01</max_vel>
            </ode>
          </contact>
          <friction>
            <ode>
              <mu>0.7</mu>
              <mu2>0.7</mu2>
            </ode>
          </friction>
        </surface>
      </collision>
      <visual>
        <origin xyz="0 0 0" rpy=" 0 0 0"/>
        <geometry>
          <box size = "0.7 0.7 0.6"/>
        </geometry>
        <material name="black">
          <color rgba="1 0 0 1"/>
        </material>
      </visual>
    </link>
    <gazebo reference="small_table_front">
      <kp>1000000</kp> 
      <kd>100</kd> 
      <material>Gazebo/White</material>
      <mu1>0.7</mu1>
      <mu2>0.7</mu2>
      <selfCollide>false</selfCollide>
      <ode>
        <solver>
          <type>quick</type> 
          <iters>200</iters> 
          <sor>1.3</sor>
        </solver>
        <constraints>
          <cfm>0.001</cfm>
          <erp>0.65</erp>
        </constraints>
      </ode>
    </gazebo> -->
    
	    
	    
       <!-- Camera floating -->     
	    <link name="camera_link">
		<visual>
		    <origin xyz="0 0 0" rpy="0 0 0"/>
		    <geometry>
		        <mesh filename="file://$(find multi_robot_sim)/meshes/zed_mini/zedm.stl" />
		    </geometry>

		</visual>
		<collision>
		  <origin xyz="0 0 0" rpy="0 0 0"/>
		  <geometry>
		    <mesh filename="file://$(find multi_robot_sim)/meshes/zed_mini/zedm.stl" />
		  </geometry>
		</collision>
		<inertial>
		  <origin xyz="0 0 0" rpy="0 0 0"/>
		  <mass value="1"/>
		  <inertia ixx="0"  ixy="0"  ixz="0" iyy="0" iyz="0" izz="0" />
	      </inertial>
	    </link>
	    
	    <joint name="camera_optical_joint" type="fixed">
		<parent link="camera_link"/>
		<child link="camera_link_optical"/>
		<origin xyz="0 0 0" rpy="-1.57 0 -1.57"/>

	    </joint>
	    <link name="camera_link_optical">
	    </link>

	    <gazebo reference="camera_link">
		<material>Gazebo/Red</material>

		<sensor name="camera" type="depth">
		    <pose> 0 0 0 0 0 0 </pose>
		    <visualize>true</visualize>
		    <update_rate>10</update_rate>
		    <camera>
		        <horizontal_fov>1.780</horizontal_fov>
		        <image>
		            <format>B8G8R8</format>
		            <width>1920</width>
		            <height>1080</height>
		        </image>
		        <clip>
		            <near>0.1</near>
		            <far>9.0</far>
		        </clip>
		    </camera>
		    <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
		         <ros>
		          <namespace>${robot_name}</namespace>
		         </ros>               
		        <frame_name>camera_link_optical</frame_name>
		        <min_depth>0.1</min_depth>
		        <max_depth>9.0</max_depth>
		    </plugin>
		</sensor>
	    </gazebo>
	    <joint name="camera_joint" type="fixed">
		<parent link="world"/>
		<child link="camera_link"/>
		<origin xyz="-1.6 13.2 1.4" rpy="0.0 0 0"/>

	    </joint>  
    </xacro:if>
    
    
    <!-- Second front table -->     
    <xacro:if value="${robot_name == 'robot_2'}">

	     <joint name="small_table_front_2_joint" type="fixed">
	      <parent link="world" />
	      <child link = "small_table_2_front" />
	      <origin xyz="-1.8 0.6 0.305" rpy="0.0 0.0 0.0" /> 
	    </joint>

	    <link name='small_table_2_front'>
	      <inertial>
		<origin xyz="0 0 0" rpy="0 0 0"/>
		<mass value="100"/>
		<inertia ixx="18.73714"  ixy="0"  ixz="0" iyy="18.73714" iyz="0" izz="18.73714" />
	      </inertial>
	      <collision>
		<origin xyz="0 0 0" rpy=" 0 0 0"/> 
		<geometry>
		  <box size = "0.7 0.7 0.6"/>
		</geometry>
		<surface>
		  <contact>
		    <collide_without_contact>false</collide_without_contact>
		    <ode>
		      <kp>1000000</kp> <!-- Adjusted stiffness for stability -->
		      <kd>100</kd> <!-- Damping to reduce jitter -->
		      <min_depth>0.001</min_depth>
		      <max_vel>0.01</max_vel>
		    </ode>
		  </contact>
		  <friction>
		    <ode>
		      <mu>0.7</mu>
		      <mu2>0.7</mu2>
		    </ode>
		  </friction>
		</surface>
	      </collision>
	      <visual>
		<origin xyz="0 0 0" rpy=" 0 0 0"/>
		<geometry>
		  <box size = "0.7 0.7 0.6"/>
		</geometry>
		<material name="black">
		  <color rgba="1 0 0 1"/>
		</material>
	      </visual>
	    </link>
	    <gazebo reference="small_table_2_front">
	      <kp>1000000</kp> <!-- Adjusted stiffness for stability -->
	      <kd>100</kd> <!-- Damping to reduce jitter -->
	      <material>Gazebo/White</material>
	      <mu1>0.7</mu1>
	      <mu2>0.7</mu2>
	      <selfCollide>false</selfCollide>
	      <ode>
		<solver>
		  <type>quick</type> <!-- Consistent with world solver settings -->
		  <iters>200</iters> <!-- Increased iterations to align with world solver -->
		  <sor>1.3</sor>
		</solver>
		<constraints>
		  <cfm>0.001</cfm>
		  <erp>0.65</erp>
		</constraints>
	      </ode>
	    </gazebo>  


    </xacro:if>
    <!-- END Basic env Basic env Basic env-->
    <!-- END Basic env Basic env Basic env-->  

     
                
    <!-- ***** UR10e ROBOT .urdf SERIAL CHAIN ***** -->
    <!-- Links: -->
    <link name="${tf_prefix}base_link"/>

    <link name="${tf_prefix}base_link_inertia">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 ${pi}"/>
        <geometry>
          <mesh filename="file://$(find multi_robot_sim)/meshes/visual/base.dae"/>
        </geometry>
        <material name="LightGrey">
          <color rgba="0.7 0.7 0.7 1.0"/>
        </material>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 ${pi}"/>
        <geometry>
          <mesh filename="file://$(find multi_robot_sim)/meshes/collision/base.stl"/>
        </geometry>
      </collision>
      <xacro:cylinder_inertial radius="${base_inertia_radius}" length="${base_inertia_length}" mass="${base_mass}">
        <origin xyz="0 0 0" rpy="0 0 0" />
      </xacro:cylinder_inertial>
  </link>

    <link name="${tf_prefix}shoulder_link">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 ${pi}"/>
        <geometry>
          <mesh filename="file://$(find multi_robot_sim)/meshes/visual/shoulder.dae"/>
        </geometry>
        <material name="LightGrey">
          <color rgba="0.7 0.7 0.7 1.0"/>
        </material>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 ${pi}"/>
        <geometry>
          <mesh filename="file://$(find multi_robot_sim)/meshes/collision/shoulder.stl"/>
        </geometry>
      </collision>
      <xacro:cylinder_inertial radius="${shoulder_inertia_radius}" length="${shoulder_inertia_length}" mass="${shoulder_mass}">
        <origin xyz="0 0 0" rpy="0 0 0" />
      </xacro:cylinder_inertial>
  </link>

    <link name="${tf_prefix}upper_arm_link">
      <visual>
        <origin xyz="0 0 ${shoulder_offset}" rpy="${pi/2} 0 ${-pi/2}"/>
        <geometry>
          <mesh filename="file://$(find multi_robot_sim)/meshes/visual/upperarm.dae"/>
        </geometry>
        <material name="LightGrey">
          <color rgba="0.7 0.7 0.7 1.0"/>
        </material>
      </visual>
      <collision>
        <origin xyz="0 0 ${shoulder_offset}" rpy="${pi/2} 0 ${-pi/2}"/>
        <geometry>
          <mesh filename="file://$(find multi_robot_sim)/meshes/collision/upperarm.stl"/>
        </geometry>
      </collision>
      <xacro:cylinder_inertial radius="${upperarm_inertia_radius}" length="${upperarm_inertia_length}" mass="${upper_arm_mass}">
        <origin xyz="${-0.5 * upperarm_inertia_length} 0.0 ${upper_arm_inertia_offset}" rpy="0 ${pi/2} 0" />
      </xacro:cylinder_inertial>
  </link>

    <link name="${tf_prefix}forearm_link">
      <visual>
        <origin xyz="0 0 ${elbow_offset}" rpy="${pi/2} 0 ${-pi/2}"/>
        <geometry>
          <mesh filename="file://$(find multi_robot_sim)/meshes/visual/forearm.dae"/>
        </geometry>
        <material name="LightGrey">
          <color rgba="0.7 0.7 0.7 1.0"/>
        </material>
      </visual>
      <collision>
        <origin xyz="0 0 ${elbow_offset}" rpy="${pi/2} 0 ${-pi/2}"/>
        <geometry>
          <mesh filename="file://$(find multi_robot_sim)/meshes/collision/forearm.stl"/>
        </geometry>
      </collision>
      <xacro:cylinder_inertial radius="${forearm_inertia_radius}" length="${forearm_inertia_length}"  mass="${forearm_mass}">
        <origin xyz="${-0.5 * forearm_inertia_length} 0.0 ${elbow_offset}" rpy="0 ${pi/2} 0" />
      </xacro:cylinder_inertial>
  </link>

    <link name="${tf_prefix}wrist_1_link">
      <visual>
        <origin xyz="0 0 ${wrist_1_visual_offset}" rpy="${pi/2} 0 0"/>
        <geometry>
          <mesh filename="file://$(find multi_robot_sim)/meshes/visual/wrist1.dae"/>
        </geometry>
        <material name="LightGrey">
          <color rgba="0.7 0.7 0.7 1.0"/>
        </material>
      </visual>
      <collision>
        <origin xyz="0 0 ${wrist_1_visual_offset}" rpy="${pi/2} 0 0"/>
        <geometry>
          <mesh filename="file://$(find multi_robot_sim)/meshes/collision/wrist1.stl"/>
        </geometry>
      </collision>
      <xacro:cylinder_inertial radius="${wrist_1_inertia_radius}" length="${wrist_1_inertia_length}"  mass="${wrist_1_mass}">
        <origin xyz="0 0 0" rpy="0 0 0" />
      </xacro:cylinder_inertial>
  </link>

    <link name="${tf_prefix}wrist_2_link">
      <visual>
        <origin xyz="0 0 ${wrist_2_visual_offset}" rpy="0 0 0"/>
        <geometry>
          <mesh filename="file://$(find multi_robot_sim)/meshes/visual/wrist2.dae"/>
        </geometry>
        <material name="LightGrey">
          <color rgba="0.7 0.7 0.7 1.0"/>
        </material>
      </visual>
      <collision>
        <origin xyz="0 0 ${wrist_2_visual_offset}" rpy="0 0 0"/>
        <geometry>
          <mesh filename="file://$(find multi_robot_sim)/meshes/collision/wrist2.stl"/>
        </geometry>
      </collision>
      <xacro:cylinder_inertial radius="${wrist_2_inertia_radius}" length="${wrist_2_inertia_length}"  mass="${wrist_2_mass}">
        <origin xyz="0 0 0" rpy="0 0 0" />
      </xacro:cylinder_inertial>
  </link>

  <link name="${tf_prefix}wrist_3_link">
      <visual>
        <origin xyz="0 0 ${wrist_3_visual_offset}" rpy="${pi/2} 0 0"/>
        <geometry>
          <mesh filename="file://$(find multi_robot_sim)/meshes/visual/wrist3.dae"/>
        </geometry>
        <material name="LightGrey">
          <color rgba="0.7 0.7 0.7 1.0"/>
        </material>
      </visual>
      <collision>
        <origin xyz="0 0 ${wrist_3_visual_offset}" rpy="${pi/2} 0 0"/>
        <geometry>
          <mesh filename="file://$(find multi_robot_sim)/meshes/collision/wrist3.stl"/>
        </geometry>
      </collision>
      <xacro:cylinder_inertial radius="${wrist_3_inertia_radius}" length="${wrist_3_inertia_length}"  mass="${wrist_3_mass}">
        <origin xyz="0.0 0.0 ${-0.5 * wrist_3_inertia_length}" rpy="0 0 0" />
      </xacro:cylinder_inertial>
    </link>

    <!--
    <link name="${tf_prefix}camera_link">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <mesh filename="file://$(find multi_robot_sim)/meshes/zed_mini/zedm.stl" />
            </geometry>

        </visual>
        <collision>
          <origin xyz="0 0 0" rpy="0 0 0"/>
          <geometry>
            <mesh filename="file://$(find multi_robot_sim)/meshes/zed_mini/zedm.stl" />
          </geometry>
        </collision>
        <inertial>
          <origin xyz="0 0 0" rpy="0 0 0"/>
          <mass value="1"/>
          <inertia ixx="0"  ixy="0"  ixz="0" iyy="0" iyz="0" izz="0" />
      </inertial>
    </link>
    
    <joint name="${tf_prefix}camera_optical_joint" type="fixed">
        <parent link="${tf_prefix}camera_link"/>
        <child link="${tf_prefix}camera_link_optical"/>
        <origin xyz="0 0 0" rpy="-1.57 0 -1.57"/>

    </joint>
    <link name="${tf_prefix}camera_link_optical">
    </link>

    <gazebo reference="${tf_prefix}camera_link">
        <material>Gazebo/Red</material>

        <sensor name="camera" type="depth">
            <pose> 0 0 0 0 0 0 </pose>
            <visualize>true</visualize>
            <update_rate>10</update_rate>
            <camera>
                <horizontal_fov>1.780</horizontal_fov>
                <image>
                    <format>B8G8R8</format>
                    <width>1920</width>
                    <height>1080</height>
                </image>
                <clip>
                    <near>0.1</near>
                    <far>9.0</far>
                </clip>
            </camera>
            <plugin name="${robot_name}_camera_controller" filename="libgazebo_ros_camera.so">
                 <ros>
                  <namespace>${robot_name}</namespace>
                 </ros>               
                <camera_name>${robot_name}_camera</camera_name>
                <frame_name>${tf_prefix}camera_link_optical</frame_name>
                <min_depth>0.1</min_depth>
                <max_depth>9.0</max_depth>
            </plugin>
        </sensor>
    </gazebo>
    <joint name="${tf_prefix}camera_joint" type="fixed">
        <parent link="${tf_prefix}wrist_3_link"/>
        <child link="${tf_prefix}camera_link"/>
        <origin xyz="0.0 -0.06 0.02" rpy="3.14 -1.57 -1.57"/>

    </joint>
    --> 
    
    
    <!-- Joints: -->

    <xacro:if value="${robot_name == 'robot_2'}">

      <joint name="${robot_name}_base_link_joint" type="fixed">
        <parent link="world" />
        <child link="${robot_name}_base_link" />
        <origin xyz="-1.6 -0.15 0.71" rpy="0 0 0" />
      </joint>

    </xacro:if>

    <joint name="${tf_prefix}base_link-base_link_inertia" type="fixed">
      <parent link="${tf_prefix}base_link" />
      <child link="${tf_prefix}base_link_inertia" />
      <!-- 'base_link' is REP-103 aligned (so X+ forward), while the internal
           frames of the robot/controller have X+ pointing backwards.
           Use the joint between 'base_link' and 'base_link_inertia' (a dummy
           link/frame) to introduce the necessary rotation over Z (of pi rad).
      -->
      <origin xyz="0 0 0" rpy="0 0 ${pi}" />
  </joint>

    <joint name="${tf_prefix}shoulder_pan_joint" type="revolute">
      <parent link="${tf_prefix}base_link_inertia" />
      <child link="${tf_prefix}shoulder_link" />
      <origin xyz="${shoulder_x} ${shoulder_y} ${shoulder_z}" rpy="${shoulder_roll} ${shoulder_pitch} ${shoulder_yaw}" />
      <axis xyz="0 0 1" />
      <limit lower="${shoulder_pan_lower_limit}" upper="${shoulder_pan_upper_limit}"
        effort="${shoulder_pan_effort_limit}" velocity="${shoulder_pan_velocity_limit}"/>
      <xacro:if value="${safety_limits}">
         <safety_controller soft_lower_limit="${shoulder_pan_lower_limit + safety_pos_margin}" soft_upper_limit="${shoulder_pan_upper_limit - safety_pos_margin}" k_position="${safety_k_position}" k_velocity="0.0"/>
      </xacro:if>
      <dynamics damping="0" friction="0"/>
  </joint>

    <joint name="${tf_prefix}shoulder_lift_joint" type="revolute">
      <parent link="${tf_prefix}shoulder_link" />
      <child link="${tf_prefix}upper_arm_link" />
      <origin xyz="${upper_arm_x} ${upper_arm_y} ${upper_arm_z}" rpy="${upper_arm_roll} ${upper_arm_pitch} ${upper_arm_yaw}" />
      <axis xyz="0 0 1" />
      <limit lower="${shoulder_lift_lower_limit}" upper="${shoulder_lift_upper_limit}"
        effort="${shoulder_lift_effort_limit}" velocity="${shoulder_lift_velocity_limit}"/>
      <xacro:if value="${safety_limits}">
         <safety_controller soft_lower_limit="${shoulder_lift_lower_limit + safety_pos_margin}" soft_upper_limit="${shoulder_lift_upper_limit - safety_pos_margin}" k_position="${safety_k_position}" k_velocity="0.0"/>
      </xacro:if>
      <dynamics damping="0" friction="0"/>
  </joint>

    <joint name="${tf_prefix}elbow_joint" type="revolute">
      <parent link="${tf_prefix}upper_arm_link" />
      <child link="${tf_prefix}forearm_link" />
      <origin xyz="${forearm_x} ${forearm_y} ${forearm_z}" rpy="${forearm_roll} ${forearm_pitch} ${forearm_yaw}" />
      <axis xyz="0 0 1" />
      <limit lower="${elbow_joint_lower_limit}" upper="${elbow_joint_upper_limit}"
        effort="${elbow_joint_effort_limit}" velocity="${elbow_joint_velocity_limit}"/>
      <xacro:if value="${safety_limits}">
         <safety_controller soft_lower_limit="${elbow_joint_lower_limit + safety_pos_margin}" soft_upper_limit="${elbow_joint_upper_limit - safety_pos_margin}" k_position="${safety_k_position}" k_velocity="0.0"/>
      </xacro:if>
      <dynamics damping="0" friction="0"/>
  </joint>

    <joint name="${tf_prefix}wrist_1_joint" type="revolute">
      <parent link="${tf_prefix}forearm_link" />
      <child link="${tf_prefix}wrist_1_link" />
      <origin xyz="${wrist_1_x} ${wrist_1_y} ${wrist_1_z}" rpy="${wrist_1_roll} ${wrist_1_pitch} ${wrist_1_yaw}" />
      <axis xyz="0 0 1" />
      <limit lower="${wrist_1_lower_limit}" upper="${wrist_1_upper_limit}"
        effort="${wrist_1_effort_limit}" velocity="${wrist_1_velocity_limit}"/>
      <xacro:if value="${safety_limits}">
         <safety_controller soft_lower_limit="${wrist_1_lower_limit + safety_pos_margin}" soft_upper_limit="${wrist_1_upper_limit - safety_pos_margin}" k_position="${safety_k_position}" k_velocity="0.0"/>
      </xacro:if>
      <dynamics damping="0" friction="0"/>
  </joint>

    <joint name="${tf_prefix}wrist_2_joint" type="revolute">
      <parent link="${tf_prefix}wrist_1_link" />
      <child link="${tf_prefix}wrist_2_link" />
      <origin xyz="${wrist_2_x} ${wrist_2_y} ${wrist_2_z}" rpy="${wrist_2_roll} ${wrist_2_pitch} ${wrist_2_yaw}" />
      <axis xyz="0 0 1" />
      <limit lower="${wrist_2_lower_limit}" upper="${wrist_2_upper_limit}"
             effort="${wrist_2_effort_limit}" velocity="${wrist_2_velocity_limit}"/>
      <xacro:if value="${safety_limits}">
         <safety_controller soft_lower_limit="${wrist_2_lower_limit + safety_pos_margin}" soft_upper_limit="${wrist_2_upper_limit - safety_pos_margin}" k_position="${safety_k_position}" k_velocity="0.0"/>
      </xacro:if>
      <dynamics damping="0" friction="0"/>
  </joint>

    <joint name="${tf_prefix}wrist_3_joint" type="revolute">
      <parent link="${tf_prefix}wrist_2_link" />
      <child link="${tf_prefix}wrist_3_link" />
      <origin xyz="${wrist_3_x} ${wrist_3_y} ${wrist_3_z}" rpy="${wrist_3_roll} ${wrist_3_pitch} ${wrist_3_yaw}" />
      <axis xyz="0 0 1" />
      <limit lower="${wrist_3_lower_limit}" upper="${wrist_3_upper_limit}"
             effort="${wrist_3_effort_limit}" velocity="${wrist_3_velocity_limit}"/>
      <xacro:if value="${safety_limits}">
         <safety_controller soft_lower_limit="${wrist_3_lower_limit + safety_pos_margin}" soft_upper_limit="${wrist_3_upper_limit - safety_pos_margin}" k_position="${safety_k_position}" k_velocity="0.0"/>
      </xacro:if>
      <dynamics damping="0" friction="0"/>
    </joint>

    <link name="${tf_prefix}ft_frame"/>
    <joint name="${tf_prefix}wrist_3_link-ft_frame" type="fixed">
      <parent link="${tf_prefix}wrist_3_link"/>
      <child link="${tf_prefix}ft_frame"/>
      <origin xyz="0 0 0" rpy="${pi} 0 0"/>
    </joint>

    <!-- ROS-Industrial 'base' frame - base_link to UR 'Base' Coordinates transform -->
    <link name="${tf_prefix}base"/>
    <joint name="${tf_prefix}base_link-base_fixed_joint" type="fixed">
      <!-- Note the rotation over Z of pi radians - as base_link is REP-103
           aligned (i.e., has X+ forward, Y+ left and Z+ up), this is needed
           to correctly align 'base' with the 'Base' coordinate system of
           the UR controller.
      -->
      <origin xyz="0 0 0" rpy="0 0 ${pi}"/>
      <parent link="${tf_prefix}base_link"/>
      <child link="${tf_prefix}base"/>
    </joint>

    <!-- ROS-Industrial 'flange' frame - attachment point for EEF models -->
    <link name="${tf_prefix}flange" />
    <joint name="${tf_prefix}wrist_3-flange" type="fixed">
      <parent link="${tf_prefix}wrist_3_link" />
      <child link="${tf_prefix}flange" />
      <origin xyz="0 0 0" rpy="0 ${-pi/2.0} ${-pi/2.0}" />
    </joint>

    <!-- ROS-Industrial 'tool0' frame - all-zeros tool frame -->
    <link name="${tf_prefix}tool0"/>
    <joint name="${tf_prefix}flange-tool0" type="fixed">
      <!-- default toolframe - X+ left, Y+ up, Z+ front -->
      <origin xyz="0 0 0" rpy="${pi/2.0} 0 ${pi/2.0}"/>
      <parent link="${tf_prefix}flange"/>
      <child link="${tf_prefix}tool0"/>
    </joint>

    <!-- EXTRA LINK + JOINT for the base_link to appear in Gazebo and to be able to calculate TRANSFORMS: -->
    <link name="${tf_prefix}BASE_TF">
      <inertial>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <mass value="0.00001" />
        <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
      </inertial>
      <visual>
        <geometry>
          <box size= "0.00001 0.00001 0.00001" />
        </geometry>
      </visual>
    </link>
    <joint name="${tf_prefix}BASE_TF_joint" type="fixed" >
      <parent link="${tf_prefix}base_link" />
      <child link="${tf_prefix}BASE_TF" />
      <limit effort="10000" lower="0.0" upper="0.0" velocity="0.0"/>
      <axis xyz="1 0 0" />
      <origin xyz="0.0 0.0 0.0" rpy="0 0 0"/>
    </joint>

    <!-- EXTRA LINK + JOINT for the TCP to appear in Gazebo and to be able to calculate TRANSFORMS: -->
    <link name="${tf_prefix}TCP">
      <inertial>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <mass value="0.00001" />
        <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
      </inertial>
      <visual>
        <geometry>
          <box size= "0.00001 0.00001 0.00001" />
        </geometry>
      </visual>
    </link>
    <joint name="${tf_prefix}TCP_joint" type="prismatic" >
      <parent link="${tf_prefix}wrist_3_link" />
      <child link="${tf_prefix}TCP" />
      <limit effort="10000" lower="0.0" upper="0.0" velocity="0.0"/>
      <axis xyz="1 0 0" />
      <origin xyz="0.0 0.0 0.0" rpy="0 0 0"/>
    </joint>


    <!-- =================================== -->
    <!-- ========== END-EFFECTORS ========== -->

      <!-- NOTE: JOINT LIMITS have been slightly augmentated from 0.0 to +-0.05 to avoid errors in MoveIt!2 execution. -->

      <!-- Robotiq: coupler -->
      <link name="${tf_prefix}robotiq_coupler">
        <visual>
          <geometry>
            <mesh filename="file://$(find multi_robot_sim)/meshes/robotiq2f85/robotiq_85_coupler.stl" />
          </geometry>
        </visual>
        <collision>
          <geometry>
            <mesh filename="file://$(find multi_robot_sim)/meshes/robotiq2f85/robotiq_85_coupler.stl" />
          </geometry>
        </collision>
        <inertial>
          <origin xyz="2.073e-05   1.45286e-03  -1.1049e-03" rpy="0 0 0" />
          <mass value="0.168" />
          <inertia ixx="6.69695624e-05" ixy="5.21511788e-09" ixz="-2.74383009e-08" 
                  iyy="7.85088161e-05" iyz="5.41105193e-07" izz="1.41819717e-04"/>
        </inertial>
      </link>

      <joint name="${tf_prefix}robotiq_coupler_joint" type="fixed">
        <origin xyz="0 0 0.004" rpy="0 0 ${-pi/2.0}" />
        <parent link="${tf_prefix}tool0"/>
        <child link="${tf_prefix}robotiq_coupler"/>
      </joint>

      <gazebo reference="${tf_prefix}robotiq_coupler">
        <mu1>0.9</mu1>
        <mu2>0.9</mu2>
        <material>Gazebo/FlatBlack</material>
      </gazebo>

      <!-- Robotiq: base_link -->
      <link name="${tf_prefix}robotiq_85_base_link">
        <visual>
          <geometry>
            <mesh filename="file://$(find multi_robot_sim)/meshes/robotiq2f85/visual/robotiq_85_base_link.dae"/>
          </geometry>
        </visual>
        <collision>
          <geometry>
            <mesh filename="file://$(find multi_robot_sim)/meshes/robotiq2f85/collision/robotiq_85_base_link.stl"/>
          </geometry>
        </collision>
        <inertial>
          <mass value="0.636951" />
          <origin xyz="0.0 0.0 0.0" />
          <inertia ixx = "0.000380" ixy = "0.000000" ixz = "0.000000"
              iyx = "0.000000" iyy = "0.001110" iyz = "0.000000"
              izx = "0.000000" izy = "0.000000" izz = "0.001171" />
        </inertial>
      </link>

      <joint name="${tf_prefix}robotiq_85_base_joint" type="fixed">
        <origin xyz="0 0 0.004" rpy="0 ${-pi/2} ${pi}"/>
        <parent link="${tf_prefix}robotiq_coupler"/>
        <child link="${tf_prefix}robotiq_85_base_link"/>
      </joint>

      <!-- Robotiq: left_knuckle -->
      <link name="${tf_prefix}robotiq_85_left_knuckle_link">
        <visual>
          <geometry>
            <mesh filename="file://$(find multi_robot_sim)/meshes/robotiq2f85/visual/robotiq_85_knuckle_link.dae"/>
          </geometry>
        </visual>
        <collision>
          <geometry>
            <mesh filename="file://$(find multi_robot_sim)/meshes/robotiq2f85/collision/robotiq_85_knuckle_link.stl"/>
          </geometry>
        </collision>
        <inertial>
          <mass value="0.018491" />
          <origin xyz="0.0 0.0 0.0" />
          <inertia ixx = "0.000009" ixy = "-0.000001" ixz = "0.000000"
              iyx = "-0.000001" iyy = "0.000001" iyz = "0.000000"
              izx = "0.000000" izy = "0.000000" izz = "0.000010" />
        </inertial>
      </link>

      <joint name="${tf_prefix}robotiq_85_left_knuckle_joint" type="revolute">
	      <parent link="${tf_prefix}robotiq_85_base_link"/>
	      <child link="${tf_prefix}robotiq_85_left_knuckle_link"/>
	      <axis xyz="0 0 1"/>
	      <origin rpy="${pi} 0.0 0.0" xyz="0.05490451627 0.03060114443 0.0"/>
	      <limit lower="-0.05" upper="0.80285" velocity="0.5" effort="1000"/>
        <dynamics damping="1.0" friction="1.0"/>
	    </joint>

      <!-- Robotiq: right_knuckle -->
      <link name="${tf_prefix}robotiq_85_right_knuckle_link">
        <visual>
          <geometry>
            <mesh filename="file://$(find multi_robot_sim)/meshes/robotiq2f85/visual/robotiq_85_knuckle_link.dae"/>
          </geometry>
        </visual>
        <collision>
          <geometry>
            <mesh filename="file://$(find multi_robot_sim)/meshes/robotiq2f85/collision/robotiq_85_knuckle_link.stl"/>
          </geometry>
        </collision>
        <inertial>
          <mass value="0.018491" />
          <origin xyz="0.0 0.0 0.0" />
          <inertia ixx = "0.000009" ixy = "-0.000001" ixz = "0.000000"
              iyx = "-0.000001" iyy = "0.000001" iyz = "0.000000"
              izx = "0.000000" izy = "0.000000" izz = "0.000010" />
        </inertial>
      </link>

      <joint name="${tf_prefix}robotiq_85_right_knuckle_joint" type="continuous">
        <parent link="${tf_prefix}robotiq_85_base_link"/>
        <child link="${tf_prefix}robotiq_85_right_knuckle_link"/>
        <axis xyz="0 0 1"/>
        <origin rpy="0.0 0.0 0.0" xyz="0.05490451627 -0.03060114443 0.0"/>
        <limit lower="-0.05" upper="0.80285" velocity="0.5" effort="1000"/>
        <dynamics damping="1.0" friction="1.0"/>
      </joint>

      <!-- Robotiq: left_finger -->
      <link name="${tf_prefix}robotiq_85_left_finger_link">
        <visual>
          <geometry>
            <mesh filename="file://$(find multi_robot_sim)/meshes/robotiq2f85/visual/robotiq_85_finger_link.dae"/>
          </geometry>
        </visual>
        <collision>
          <geometry>
            <mesh filename="file://$(find multi_robot_sim)/meshes/robotiq2f85/collision/robotiq_85_finger_link.stl"/>
          </geometry>
        </collision>
        <inertial>
          <mass value="0.027309" />
          <origin xyz="0.0 0.0 0.0" />
          <inertia ixx = "0.000003" ixy = "-0.000002" ixz = "0.000000"
              iyx = "-0.000002" iyy = "0.000021" iyz = "0.000000"
              izx = "0.000000" izy = "0.000000" izz = "0.000020" />
        </inertial>
      </link>

      <joint name="${tf_prefix}robotiq_85_left_finger_joint" type="fixed">
        <parent link="${tf_prefix}robotiq_85_left_knuckle_link"/>
        <child link="${tf_prefix}robotiq_85_left_finger_link"/>
        <origin xyz="-0.00408552455 -0.03148604435 0.0" rpy="0 0 0" />
        <dynamics damping="1.0" friction="1.0"/>
      </joint>

      <!-- Robotiq: right_finger -->
      <link name="${tf_prefix}robotiq_85_right_finger_link">
        <visual>
          <geometry>
            <mesh filename="file://$(find multi_robot_sim)/meshes/robotiq2f85/visual/robotiq_85_finger_link.dae"/>
          </geometry>
        </visual>
        <collision>
          <geometry>
            <mesh filename="file://$(find multi_robot_sim)/meshes/robotiq2f85/collision/robotiq_85_finger_link.stl"/>
          </geometry>
        </collision>
        <inertial>
          <mass value="0.027309" />
          <origin xyz="0.0 0.0 0.0" />
          <inertia ixx = "0.000003" ixy = "-0.000002" ixz = "0.000000"
              iyx = "-0.000002" iyy = "0.000021" iyz = "0.000000"
              izx = "0.000000" izy = "0.000000" izz = "0.000020" />
        </inertial>
      </link>

      <joint name="${tf_prefix}robotiq_85_right_finger_joint" type="fixed">
        <parent link="${tf_prefix}robotiq_85_right_knuckle_link"/>
        <child link="${tf_prefix}robotiq_85_right_finger_link"/>
        <origin xyz="-0.00408552455 -0.03148604435 0.0" rpy="0 0 0" />
        <dynamics damping="1.0" friction="1.0"/>
      </joint>

      <!-- Robotiq: left_inner_knuckle -->
      <link name="${tf_prefix}robotiq_85_left_inner_knuckle_link">
        <visual>
          <geometry>
            <mesh filename="file://$(find multi_robot_sim)/meshes/robotiq2f85/visual/robotiq_85_inner_knuckle_link.dae"/>
          </geometry>
        </visual>
        <collision>
          <geometry>
            <mesh filename="file://$(find multi_robot_sim)/meshes/robotiq2f85/collision/robotiq_85_inner_knuckle_link.stl"/>
          </geometry>
        </collision>
        <inertial>
          <mass value="0.029951" />
          <origin xyz="0.0 0.0 0.0" />
          <inertia ixx = "0.000039" ixy = "0.000000" ixz = "0.000000"
              iyx = "0.000000" iyy = "0.000005" iyz = "0.000000"
              izx = "0.000000" izy = "0.000000" izz = "0.000035" />
        </inertial>
      </link>

      <joint name="${tf_prefix}robotiq_85_left_inner_knuckle_joint" type="continuous">
        <parent link="${tf_prefix}robotiq_85_base_link"/>
        <child link="${tf_prefix}robotiq_85_left_inner_knuckle_link"/>
        <axis xyz="0 0 1"/>
        <origin xyz="0.06142 0.0127 0" rpy="${pi} 0.0 0.0" />
        <limit lower="-0.05" upper="0.80285" velocity="0.5" effort="1000"/>
        <dynamics damping="1.0" friction="1.0"/>
      </joint>

      <!-- Robotiq: right_inner_knuckle -->
      <link name="${tf_prefix}robotiq_85_right_inner_knuckle_link">
        <visual>
          <geometry>
            <mesh filename="file://$(find multi_robot_sim)/meshes/robotiq2f85/visual/robotiq_85_inner_knuckle_link.dae"/>
          </geometry>
        </visual>
        <collision>
          <geometry>
            <mesh filename="file://$(find multi_robot_sim)/meshes/robotiq2f85/collision/robotiq_85_inner_knuckle_link.stl"/>
          </geometry>
        </collision>
        <inertial>
          <mass value="0.029951" />
          <origin xyz="0.0 0.0 0.0" />
          <inertia ixx = "0.000039" ixy = "0.000000" ixz = "0.000000"
              iyx = "0.000000" iyy = "0.000005" iyz = "0.000000"
              izx = "0.000000" izy = "0.000000" izz = "0.000035" />
        </inertial>
      </link>

      <joint name="${tf_prefix}robotiq_85_right_inner_knuckle_joint" type="continuous">
        <parent link="${tf_prefix}robotiq_85_base_link"/>
        <child link="${tf_prefix}robotiq_85_right_inner_knuckle_link"/>
        <axis xyz="0 0 1"/>
        <origin xyz="0.06142 -0.0127 0" rpy="0 0 0"/>
        <limit lower="-0.05" upper="0.80285" velocity="0.5" effort="1000"/>
        <dynamics damping="1.0" friction="1.0"/>
      </joint>

      <!-- Robotiq: left_finger_tip -->
      <link name="${tf_prefix}robotiq_85_left_finger_tip_link">
        <visual>
          <geometry>
            <mesh filename="file://$(find multi_robot_sim)/meshes/robotiq2f85/visual/robotiq_85_finger_tip_link.dae"/>
          </geometry>
        </visual>
        <collision>
          <geometry>
            <mesh filename="file://$(find multi_robot_sim)/meshes/robotiq2f85/collision/robotiq_85_finger_tip_link.stl"/>
          </geometry>
        </collision>
        <inertial>
          <mass value="0.019555" />
          <origin xyz="0.0 0.0 0.0" />
          <inertia ixx = "0.000002" ixy = "0.000000" ixz = "0.000000"
              iyx = "0.000000" iyy = "0.000005" iyz = "0.000000"
              izx = "0.000000" izy = "0.000000" izz = "0.000006" />
        </inertial>
      </link> 

      <joint name="${tf_prefix}robotiq_85_left_finger_tip_joint" type="continuous">
        <parent link="${tf_prefix}robotiq_85_left_inner_knuckle_link"/>
        <child link="${tf_prefix}robotiq_85_left_finger_tip_link"/>
        <axis xyz="0 0 1"/>
        <origin xyz="0.04303959807 -0.03759940821 0.0" rpy="0.0 0.0 0.0"/>
        <limit lower="-0.80285" upper="0.05" velocity="0.5" effort="1000"/>
        <dynamics damping="1.0" friction="1.0"/>
      </joint>

      <!-- Robotiq: right_finger_tip -->
      <link name="${tf_prefix}robotiq_85_right_finger_tip_link">
        <visual>
          <geometry>
            <mesh filename="file://$(find multi_robot_sim)/meshes/robotiq2f85/visual/robotiq_85_finger_tip_link.dae"/>
          </geometry>
        </visual>
        <collision>
          <geometry>
            <mesh filename="file://$(find multi_robot_sim)/meshes/robotiq2f85/collision/robotiq_85_finger_tip_link.stl"/>
          </geometry>
        </collision>
        <inertial>
          <mass value="0.019555" />
          <origin xyz="0.0 0.0 0.0" />
          <inertia ixx = "0.000002" ixy = "0.000000" ixz = "0.000000"
              iyx = "0.000000" iyy = "0.000005" iyz = "0.000000"
              izx = "0.000000" izy = "0.000000" izz = "0.000006" />
        </inertial>
      </link>

      <joint name="${tf_prefix}robotiq_85_right_finger_tip_joint" type="continuous">
        <parent link="${tf_prefix}robotiq_85_right_inner_knuckle_link"/>
        <child link="${tf_prefix}robotiq_85_right_finger_tip_link"/>
        <axis xyz="0 0 1"/>
        <origin rpy="0.0 0.0 0.0" xyz="0.04303959807 -0.03759940821  0.0"/>
        <limit lower="-0.80285" upper="0.05" velocity="0.5" effort="1000"/>
        <dynamics damping="1.0" friction="1.0"/>
      </joint>

      <!-- SMALL CUBE FOR GRIPPER PLUGIN -->

      <link name="${tf_prefix}EE_robotiq_2f85">
        <inertial>
          <origin xyz="0 0 0" rpy="0 0 0" />
          <mass value="0.00001" />
          <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
        </inertial>
        <visual>
          <geometry>
            <box size= "0.001 0.001 0.001" />
          </geometry>
        </visual>
      </link>
      

    <joint name="${tf_prefix}EE_robotiq_2f85_joint" type="prismatic" >
      <parent link="${tf_prefix}robotiq_85_base_link" />
      <child link="${tf_prefix}EE_robotiq_2f85" />
      <limit effort="10000" lower="0.0" upper="0.0" velocity="0.0"/>
      <axis xyz="1 0 0" />
      <origin xyz="0.128 0.0 0.0" rpy="0 0 0"/>
    </joint>



    <!-- ROS2 Control --> 
    <!-- 1. ROS2_CONTROL tag name: -->
    <!-- A. GAZEBO SIMULATION: -->
    <gazebo>
        <plugin filename="libgazebo_ros2_control.so" name="${robot_name}_gazebo_ros2_control">
          <ros>
            <namespace>${robot_name}</namespace>
          </ros>
        <robot_sim_type>gazebo_ros2_control/GazeboSystem</robot_sim_type>
        <parameters>$(find multi_robot_sim)/config/${robot_name}_urrobotiq_controllers_v2.yaml</parameters>
        <robot_param_node>/${robot_name}/${robot_name}_robot_state_publisher</robot_param_node>
      </plugin>
    </gazebo>

    <!-- 3. Load ROS2_CONTROL: -->
    <ros2_control name="${robot_name}_GazeboSystem" type="system">

        <hardware>
          <plugin>gazebo_ros2_control/GazeboSystem</plugin>
        </hardware>

      <joint name="${tf_prefix}shoulder_pan_joint">
        <command_interface name="position"/>
          <!--param name="min">${-2*pi}</param>
          <param name="max">${2*pi}</param>
        </command_interface-->
        <command_interface name="velocity"/>
          <!--param name="min">-0.9</param>
          <param name="max">0.9</param>
        </command_interface-->
        <state_interface name="position">
            <param name="initial_value">${-pi/2}</param>
        </state_interface>
        <state_interface name="velocity"/>
        <state_interface name="effort"/>
      </joint>
      <joint name="${tf_prefix}shoulder_lift_joint">
        <command_interface name="position"/>
          <!--param name="min">${-2*pi}</param>
          <param name="max">${2*pi}</param>
        </command_interface-->
        <command_interface name="velocity"/>
          <!--param name="min">-2.0942</param>
          <param name="max">2.0942</param>
        </command_interface-->
        <state_interface name="position">
          <param name="initial_value">${-pi/2}</param>
        </state_interface>
        <state_interface name="velocity"/>
        <state_interface name="effort"/>
      </joint>
      <joint name="${tf_prefix}elbow_joint">
        <command_interface name="position"/>
          <!--param name="min">${-pi}</param>
          <param name="max">${pi}</param>
        </command_interface-->
        <command_interface name="velocity"/>
          <!--param name="min">-3.15</param>
          <param name="max">3.15</param>
        </command_interface-->
        <state_interface name="position">
          <param name="initial_value">${-pi/2}</param>
        </state_interface>
        <state_interface name="velocity"/>
        <state_interface name="effort"/>
      </joint>
      <joint name="${tf_prefix}wrist_1_joint">
        <command_interface name="position"/>
          <!--param name="min">${-2*pi}</param>
          <param name="max">${2*pi}</param>
        </command_interface-->
        <command_interface name="velocity"/>
          <!--param name="min">-3.1416</param>
          <param name="max">3.1416</param>
        </command_interface-->
        <state_interface name="position">
          <param name="initial_value">${-pi/2}</param>
        </state_interface>
        <state_interface name="velocity"/>
        <state_interface name="effort"/>
      </joint>
      <joint name="${tf_prefix}wrist_2_joint">
        <command_interface name="position"/>
          <!--param name="min">${-2*pi}</param>
          <param name="max">${2*pi}</param>
        </command_interface-->
        <command_interface name="velocity"/>
          <!--param name="min">-3.1416</param>
          <param name="max">3.1416</param>
        </command_interface-->
        <state_interface name="position">
          <param name="initial_value">${pi/2}</param>
        </state_interface>
        <state_interface name="velocity"/>
        <state_interface name="effort"/>
      </joint>
      <joint name="${tf_prefix}wrist_3_joint">
        <command_interface name="position"/>
          <!--param name="min">${-2*pi}</param>
          <param name="max">${2*pi}</param>
        </command_interface-->
        <command_interface name="velocity"/>
          <!--param name="min">-3.1416</param>
          <param name="max">3.1416</param>
        </command_interface-->
        <state_interface name="position">
          <param name="initial_value">0.0</param>
        </state_interface>
        <state_interface name="velocity"/>
        <state_interface name="effort"/>
      </joint>

      <joint name="${tf_prefix}BASE_TF_joint">
        <command_interface name="position"/>
        <command_interface name="velocity"/>
        <state_interface name="position"/>
        <state_interface name="velocity"/>
        <state_interface name="effort"/>
      </joint>

      <joint name="${tf_prefix}TCP_joint">
        <command_interface name="position"/>
        <command_interface name="velocity"/>
        <state_interface name="position"/>
        <state_interface name="velocity"/>
        <state_interface name="effort"/>
      </joint>

      <!-- =================================== -->
      <!-- ========== END-EFFECTORS ========== -->

        <joint name="${tf_prefix}robotiq_85_left_knuckle_joint">
          <command_interface name="position">
            <param name="min">-0.05</param>
            <param name="max">0.80285</param>
          </command_interface>
          <command_interface name="velocity">
            <param name="min">0.5</param>
            <param name="max">0.5</param>
          </command_interface>
          <state_interface name="position">
            <param name="initial_value">0.0</param>
          </state_interface>
          <state_interface name="velocity"/>
          <state_interface name="effort"/>
        </joint>

        <joint name="${tf_prefix}robotiq_85_right_knuckle_joint">
          <command_interface name="position">
            <param name="min">-0.05</param>
            <param name="max">0.80285</param>
          </command_interface>
          <command_interface name="velocity">
            <param name="min">0.5</param>
            <param name="max">0.5</param>
          </command_interface>
          <state_interface name="position">
            <param name="initial_value">0.0</param>
          </state_interface>
          <state_interface name="velocity"/>
          <state_interface name="effort"/>
        </joint>

        <joint name="${tf_prefix}robotiq_85_left_inner_knuckle_joint">
          <command_interface name="position">
            <param name="min">-0.05</param>
            <param name="max">0.80285</param>
          </command_interface>
          <command_interface name="velocity">
            <param name="min">0.5</param>
            <param name="max">0.5</param>
          </command_interface>
          <state_interface name="position">
            <param name="initial_value">0.0</param>
          </state_interface>
          <state_interface name="velocity"/>
          <state_interface name="effort"/>
        </joint>

        <joint name="${tf_prefix}robotiq_85_right_inner_knuckle_joint">
          <command_interface name="position">
            <param name="min">-0.05</param>
            <param name="max">0.80285</param>
          </command_interface>
          <command_interface name="velocity">
            <param name="min">0.5</param>
            <param name="max">0.5</param>
          </command_interface>
          <state_interface name="position">
            <param name="initial_value">0.0</param>
          </state_interface>
          <state_interface name="velocity"/>
          <state_interface name="effort"/>
        </joint>

        <joint name="${tf_prefix}robotiq_85_left_finger_tip_joint">
          <command_interface name="position">
            <param name="min">-0.80285</param>
            <param name="max">0.05</param>
          </command_interface>
          <command_interface name="velocity">
            <param name="min">0.5</param>
            <param name="max">0.5</param>
          </command_interface>
          <state_interface name="position">
            <param name="initial_value">0.0</param>
          </state_interface>
          <state_interface name="velocity"/>
          <state_interface name="effort"/>
        </joint>

        <joint name="${tf_prefix}robotiq_85_right_finger_tip_joint">
          <command_interface name="position">
            <param name="min">-0.80285</param>
            <param name="max">0.05</param>
          </command_interface>
          <command_interface name="velocity">
            <param name="min">0.5</param>
            <param name="max">0.5</param>
          </command_interface>
          <state_interface name="position">
            <param name="initial_value">0.0</param>
          </state_interface>
          <state_interface name="velocity"/>
          <state_interface name="effort"/>
        </joint>

        <joint name="${tf_prefix}EE_robotiq_2f85_joint">
          <command_interface name="position"/>
          <command_interface name="velocity"/>
          <state_interface name="position"/>
          <state_interface name="velocity"/>
          <state_interface name="effort"/>
        </joint>
      <!-- ========== END-EFFECTORS ========== -->


<!-- ========== START-Towercrane ========== -->
        <joint name="joint_1">
            <command_interface name="position">
                <param name="min">-${D_160}</param>
                <param name="max">${D_200}</param>
            </command_interface>
            <state_interface name="position"/>
        </joint>

        <joint name="joint_2">
            <command_interface name="position">
                <param name="min">6</param>
                <param name="max">36</param>
            </command_interface>
            <state_interface name="position"/>
        </joint>

        <joint name="joint_3">
            <command_interface name="position">
                <param name="min">-5</param>
                <param name="max">0</param>
            </command_interface>
            <state_interface name="position"/>
        </joint>

        <joint name="joint_4">
            <command_interface name="position">
                <param name="min">-5</param>
                <param name="max">0</param>
            </command_interface>
            <state_interface name="position"/>
        </joint>

        <joint name="joint_5">
            <command_interface name="position">
                <param name="min">-5</param>
                <param name="max">0</param>
            </command_interface>
            <state_interface name="position"/>
        </joint>

        <joint name="joint_6">
            <command_interface name="position">
                <param name="min">-5</param>
                <param name="max">0</param>
            </command_interface>
            <state_interface name="position"/>
        </joint>

        <joint name="joint_7">
            <command_interface name="position">
                <param name="min">-5</param>
                <param name="max">0</param>
            </command_interface>
            <state_interface name="position"/>
        </joint>

        <joint name="joint_8">
            <command_interface name="position">
                <param name="min">-${PI}</param>
                <param name="max">${PI}</param>
            </command_interface>
            <state_interface name="position"/>
        </joint>
        <!-- ========== END-Towercrane ========== -->

    </ros2_control>

        <gazebo reference="${tf_prefix}shoulder_link">
          <selfCollide>false</selfCollide>
        </gazebo>
        <gazebo reference="${tf_prefix}upper_arm_link">
          <selfCollide>false</selfCollide>
        </gazebo>
        <gazebo reference="${tf_prefix}forearm_link">
          <selfCollide>false</selfCollide>
        </gazebo>
        <gazebo reference="${tf_prefix}wrist_1_link">
          <selfCollide>false</selfCollide>
        </gazebo>
        <gazebo reference="${tf_prefix}wrist_3_link">
          <selfCollide>false</selfCollide>
        </gazebo>
        <gazebo reference="${tf_prefix}wrist_2_link">
          <selfCollide>false</selfCollide>
        </gazebo>

      <!-- =================================== -->
      <!-- ========== END-EFFECTORS ========== -->

        <gazebo reference="${tf_prefix}robotiq_85_base_link">
          <selfCollide>false</selfCollide>
        </gazebo>
        <gazebo reference="${tf_prefix}robotiq_85_left_knuckle_link">
          <selfCollide>false</selfCollide>
        </gazebo>
        <gazebo reference="${tf_prefix}robotiq_85_right_knuckle_link">
          <selfCollide>false</selfCollide>
        </gazebo>
        <gazebo reference="${tf_prefix}robotiq_85_left_finger_link">
          <selfCollide>false</selfCollide>
        </gazebo>
        <gazebo reference="${tf_prefix}robotiq_85_right_finger_link">
          <selfCollide>false</selfCollide>
        </gazebo>
        <gazebo reference="${tf_prefix}robotiq_85_left_inner_knuckle_link">
          <selfCollide>false</selfCollide>
        </gazebo>
        <gazebo reference="${tf_prefix}robotiq_85_right_inner_knuckle_link">
          <selfCollide>false</selfCollide>
        </gazebo>
        <gazebo reference="${tf_prefix}robotiq_85_left_finger_tip_link">
          <selfCollide>false</selfCollide>
        </gazebo>
        <gazebo reference="${tf_prefix}robotiq_85_right_finger_tip_link">
          <selfCollide>false</selfCollide>
        </gazebo>  


      <gazebo reference="end_effector_frame_fixed_joint">
        <preserveFixedJoint>true</preserveFixedJoint>
        <!-- For compatibility with SDFormat < 4.4 -->
        <disableFixedJointLumping>true</disableFixedJointLumping>
      </gazebo>

</robot>
